name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: cargo build --verbose

  test:
    name: Tests
    runs-on: ubuntu-latest
    if: (github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork) || github.event_name == 'push'

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run tests
        run: cargo test --verbose

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    if: (github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork) || github.event_name == 'push'

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run clippy
        run: cargo clippy --verbose

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    permissions:
      issues: write
    if: (github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork) || github.event_name == 'push'

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Run clippy
        run: cargo clippy --verbose
      - name: Generate coverage report
        run: |
          cargo llvm-cov clean --workspace
          cargo llvm-cov test -p time --no-report --all-features -- --test-threads=1
          cargo llvm-cov report --lcov > lcov.txt
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./lcov.txt
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
